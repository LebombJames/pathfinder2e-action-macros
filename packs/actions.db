{"name":"Athletics Actions","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.AxuDCxkeWrNyXORD"}},"scope":"global","command":"if (actor) {\r\n  const whitelist = ['Disarm',];\r\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\r\n    const content = await p.getContent();\r\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\r\n      await actor.createOwnedItem(action.data);\r\n    }\r\n  });\r\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"41tqBkbSdracYpzk"}
{"name":"Survival Actions","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.Tg7RN0FISyigxaMi"}},"scope":"global","command":"if (actor) {\r\n  const whitelist = ['Cover Tracks', 'Track',];\r\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\r\n    const content = await p.getContent();\r\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\r\n      await actor.createOwnedItem(action.data);\r\n    }\r\n  });\r\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"8GgdPHixjHDOh3EF"}
{"name":"Basic Actions (incl. exploration & downtime)","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.M9Z1Ma4PJYb4E15h"}},"scope":"global","command":"if (actor) {\n  const whitelist = ['Administer First Aid', 'Aid', 'Avert Gaze', 'Balance', 'Burrow', 'Climb', 'Command an Animal', 'Conceal an Object', 'Crawl', 'Create a Diversion', 'Decipher Writing', 'Delay', 'Demoralize', 'Dismiss', 'Drop Prone', 'Escape', 'Force Open', 'Grab an Edge', 'Grapple', 'Hide', 'High Jump', 'Interact', 'Leap', 'Lie', 'Long Jump', 'Mount', 'Palm an Object', 'Perform', 'Point Out', 'Raise a Shield', 'Ready', 'Recall Knowledge (Arcana)', 'Recall Knowledge (Crafting)', 'Recall Knowledge (Lore)', 'Recall Knowledge (Medicine)', 'Recall Knowledge (Nature)', 'Recall Knowledge (Occultism)', 'Recall Knowledge (Religion)', 'Recall Knowledge (Society)', 'Release', 'Request', 'Seek', 'Sense Motive', 'Shove', 'Sneak', 'Stand', 'Steal', 'Step', 'Stride', 'Strike', 'Sustain an Activation', 'Swim', 'Take Cover', 'Trip', 'Tumble Through', 'Affix a Talisman', 'Avoid Notice', 'Coerce', 'Defend', 'Follow the Expert', 'Gather Information', 'Hustle', 'Identify Magic', 'Impersonate', 'Investigate', 'Make an Impression', 'Pursue a Lead', 'Refocus', 'Repair', 'Scout', 'Earn Income', 'Long Term Rest', 'Retraining', 'Subsist', 'Search', ];\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\n    const content = await p.getContent();\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\n      await actor.createOwnedItem(action.data);\n    }\n  });\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"H1mGwfdBtfybdAYw"}
{"name":"Arcana Actions","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.QqlpTZGHoYKKrwFI"}},"scope":"global","command":"if (actor) {\n  const whitelist = ['Borrow an Arcane Spell', 'Identify Magic',];\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\n    const content = await p.getContent();\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\n      await actor.createOwnedItem(action.data);\n    }\n  });\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"JJ6WDgIQ0T0s6Dtb"}
{"name":"Spell Actions","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.2IJhIJzV3bJwxPWp"}},"scope":"global","command":"if (actor) {\r\n  const whitelist = ['Cast a Spell', 'Learn a Spell', 'Repeat a Spell', 'Sustain a Spell',];\r\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\r\n    const content = await p.getContent();\r\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\r\n      await actor.createOwnedItem(action.data);\r\n    }\r\n  });\r\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"Y7gim39s4AGmvIDM"}
{"name":"Medicine Actions","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.l1K70jq02OflErde"}},"scope":"global","command":"if (actor) {\r\n  const whitelist = ['Treat Disease', 'Treat Poison', 'Treat Wounds',];\r\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\r\n    const content = await p.getContent();\r\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\r\n      await actor.createOwnedItem(action.data);\r\n    }\r\n  });\r\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"ezls9BburOB8IbQ6"}
{"name":"Thievery Actions","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.c7UvmHpXVtOSFsXf"}},"scope":"global","command":"if (actor) {\r\n  const whitelist = ['Disable Device', 'Pick a Lock',];\r\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\r\n    const content = await p.getContent();\r\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\r\n      await actor.createOwnedItem(action.data);\r\n    }\r\n  });\r\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"gDyb55JsxnxPoBT3"}
{"name":"Crafting Actions","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.BTWCjdXVGm57ngZ0"}},"scope":"global","command":"if (actor) {\r\n  const whitelist = ['Craft', 'Identify Alchemy',];\r\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\r\n    const content = await p.getContent();\r\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\r\n      await actor.createOwnedItem(action.data);\r\n    }\r\n  });\r\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"o7Ppldbgh8std5As"}
{"name":"Society Actions","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.r5f258B470lG9zTU"}},"scope":"global","command":"if (actor) {\r\n  const whitelist = ['Create Forgery',];\r\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\r\n    const content = await p.getContent();\r\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\r\n      await actor.createOwnedItem(action.data);\r\n    }\r\n  });\r\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"oyNkKmJ27Pzdc7Lh"}
{"name":"Deception Actions","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.c9VduiKKCqZ8p0Oj"}},"scope":"global","command":"if (actor) {\r\n  const whitelist = ['Feint',];\r\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\r\n    const content = await p.getContent();\r\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\r\n      await actor.createOwnedItem(action.data);\r\n    }\r\n  });\r\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"uMHLsa6ffypSJUTk"}
{"name":"Acrobatics Actions","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.jqcpKt8rQc3DHfmP"}},"scope":"global","command":"if (actor) {\r\n  const whitelist = ['Manuever in Flight', 'Squeeze',];\r\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\r\n    const content = await p.getContent();\r\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\r\n      await actor.createOwnedItem(action.data);\r\n    }\r\n  });\r\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"yrUJUGhG3puWNgY7"}
{"_id":"H1mGwfdBtfybdAYw","name":"Basic Actions (incl. exploration & downtime)","permission":{"default":0,"nSZwPybgqA59S3fg":3},"type":"script","flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.M9Z1Ma4PJYb4E15h"}},"scope":"global","command":"if (actor) {\n  const whitelist = ['Administer First Aid', 'Aid', 'Avert Gaze', 'Balance', 'Burrow', 'Climb', 'Command an Animal', 'Conceal an Object', 'Crawl', 'Create a Diversion', 'Decipher Writing', 'Delay', 'Demoralize', 'Dismiss', 'Drop Prone', 'Escape', 'Force Open', 'Grab an Edge', 'Grapple', 'Hide', 'High Jump', 'Interact', 'Leap', 'Lie', 'Long Jump', 'Mount', 'Palm an Object', 'Perform', 'Point Out', 'Raise a Shield', 'Ready', 'Recall Knowledge (Arcana)', 'Recall Knowledge (Crafting)', 'Recall Knowledge (Lore)', 'Recall Knowledge (Medicine)', 'Recall Knowledge (Nature)', 'Recall Knowledge (Occultism)', 'Recall Knowledge (Religion)', 'Recall Knowledge (Society)', 'Release', 'Request', 'Seek', 'Sense Motive', 'Shove', 'Sneak', 'Stand', 'Steal', 'Step', 'Stride', 'Strike', 'Sustain an Activation', 'Swim', 'Take Cover', 'Trip', 'Tumble Through', 'Affix a Talisman', 'Avoid Notice', 'Coerce', 'Defend', 'Follow the Expert', 'Gather Information', 'Hustle', 'Identify Magic', 'Impersonate', 'Investigate', 'Make an Impression', 'Refocus', 'Repair', 'Scout', 'Earn Income', 'Long Term Rest', 'Retraining', 'Subsist', 'Search', ];\n  game.packs.filter(p => p.metadata.entity === 'Item' && p.collection.includes('action')).forEach(async (p) => {\n    const content = await p.getContent();\n    for (const action of content.filter(a => whitelist.includes(a.name))) {\n      await actor.createOwnedItem(action.data);\n    }\n  });\n}","author":"nSZwPybgqA59S3fg","img":"icons/svg/dice-target.svg","actorIds":[]}
