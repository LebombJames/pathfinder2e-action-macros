{"name":"Crafting Actions","type":"script","author":"o86R8RtURj8zbgWh","img":"icons/skills/trades/woodcutting-logging-saw.webp","scope":"global","command":"if (actor) {\n  const whitelist = ['Craft', 'Identify Alchemy',];\n\n    const contents = await game.packs.filter(p => p.metadata.entity === 'Item' && p.metadata.name === \"actionspf2e\")[0].getDocuments();\n\n    let tobeadded = [];\n\n    for (let x of contents) {\n        if (whitelist.includes(x.name)) {\n            tobeadded.push(x.data)\n        }\n    }\n    tobeadded.sort(function(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        }\n        if (a.name > b.name) {\n            return 1;\n        }\n        return 0;\n    })\n    await actor.createEmbeddedDocuments('Item', tobeadded)\n}","folder":null,"sort":0,"permission":{"default":0,"o86R8RtURj8zbgWh":3},"flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.BTWCjdXVGm57ngZ0"}},"_id":"5P0YbWJtGp3NHTDY"}
{"name":"Medicine Actions","type":"script","author":"o86R8RtURj8zbgWh","img":"systems/pf2e/icons/spells/heal.webp","scope":"global","command":"if (actor) {\n  const whitelist = ['Treat Disease', 'Treat Poison', 'Treat Wounds',];\n\n    const contents = await game.packs.filter(p => p.metadata.entity === 'Item' && p.metadata.name === \"actionspf2e\")[0].getDocuments();\n\n    let tobeadded = [];\n\n    for (let x of contents) {\n        if (whitelist.includes(x.name)) {\n            tobeadded.push(x.data)\n        }\n    }\n    tobeadded.sort(function(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        }\n        if (a.name > b.name) {\n            return 1;\n        }\n        return 0;\n    })\n    await actor.createEmbeddedDocuments('Item', tobeadded)\n}","folder":null,"sort":0,"permission":{"default":0,"o86R8RtURj8zbgWh":3},"flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.l1K70jq02OflErde"}},"_id":"OjqkO7P9BQaL2Q3i"}
{"name":"Deception Actions","type":"script","author":"o86R8RtURj8zbgWh","img":"systems/pf2e/icons/spells/charming-words.webp","scope":"global","command":"if (actor) {\n  const whitelist = ['Feint',];\n\n    const contents = await game.packs.filter(p => p.metadata.entity === 'Item' && p.metadata.name === \"actionspf2e\")[0].getDocuments();\n\n    let tobeadded = [];\n\n    for (let x of contents) {\n        if (whitelist.includes(x.name)) {\n            tobeadded.push(x.data)\n        }\n    }\n    tobeadded.sort(function(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        }\n        if (a.name > b.name) {\n            return 1;\n        }\n        return 0;\n    })\n    await actor.createEmbeddedDocuments('Item', tobeadded)\n}","folder":null,"sort":0,"permission":{"default":0,"o86R8RtURj8zbgWh":3},"flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.c9VduiKKCqZ8p0Oj"}},"_id":"ZMTisU4YJDyyAlnA"}
{"name":"Athletics Actions","type":"script","author":"o86R8RtURj8zbgWh","img":"systems/pf2e/icons/spells/athletic-rush.webp","scope":"global","command":"if (actor) {\n  const whitelist = ['Disarm',];\n\n    const contents = await game.packs.filter(p => p.metadata.entity === 'Item' && p.metadata.name === \"actionspf2e\")[0].getDocuments();\n\n    let tobeadded = [];\n\n    for (let x of contents) {\n        if (whitelist.includes(x.name)) {\n            tobeadded.push(x.data)\n        }\n    }\n    tobeadded.sort(function(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        }\n        if (a.name > b.name) {\n            return 1;\n        }\n        return 0;\n    })\n    await actor.createEmbeddedDocuments('Item', tobeadded)\n}","folder":null,"sort":0,"permission":{"default":0,"o86R8RtURj8zbgWh":3},"flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.AxuDCxkeWrNyXORD"}},"_id":"Zju2cXkLgTJpyBn3"}
{"name":"Spell Actions","type":"script","author":"o86R8RtURj8zbgWh","img":"icons/magic/light/hand-sparks-glow-yellow.webp","scope":"global","command":"if (actor) {\n  const whitelist = ['Cast a Spell', 'Learn a Spell', 'Repeat a Spell', 'Sustain a Spell',];\n\n    const contents = await game.packs.filter(p => p.metadata.entity === 'Item' && p.metadata.name === \"actionspf2e\")[0].getDocuments();\n\n    let tobeadded = [];\n\n    for (let x of contents) {\n        if (whitelist.includes(x.name)) {\n            tobeadded.push(x.data)\n        }\n    }\n    tobeadded.sort(function(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        }\n        if (a.name > b.name) {\n            return 1;\n        }\n        return 0;\n    })\n    await actor.createEmbeddedDocuments('Item', tobeadded)\n}","folder":null,"sort":0,"permission":{"default":0,"o86R8RtURj8zbgWh":3},"flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.2IJhIJzV3bJwxPWp"}},"_id":"gc50fYvGpUkJk4tX"}
{"name":"Acrobatics Actions","type":"script","author":"o86R8RtURj8zbgWh","img":"icons/skills/movement/feet-winged-sandals-tan.webp","scope":"global","command":"if (actor) {\n  const whitelist = ['Maneuver in Flight', 'Squeeze',];\nconst contents = await game.packs.filter(p => p.metadata.entity === 'Item' && p.metadata.name === \"actionspf2e\")[0].getDocuments();\n\n    let tobeadded = [];\n\n    for (let x of contents) {\n        if (whitelist.includes(x.name)) {\n            tobeadded.push(x.data)\n        }\n    }\n    tobeadded.sort(function(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        }\n        if (a.name > b.name) {\n            return 1;\n        }\n        return 0;\n    })\n    await actor.createEmbeddedDocuments('Item', tobeadded)\n}","folder":null,"sort":0,"permission":{"default":0,"o86R8RtURj8zbgWh":3},"flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.jqcpKt8rQc3DHfmP"}},"_id":"idSVdRapBh94CMVz"}
{"name":"Society Actions","type":"script","author":"o86R8RtURj8zbgWh","img":"icons/skills/trades/academics-merchant-scribe.webp","scope":"global","command":"if (actor) {\n  const whitelist = ['Create Forgery',];\n\n    const contents = await game.packs.filter(p => p.metadata.entity === 'Item' && p.metadata.name === \"actionspf2e\")[0].getDocuments();\n\n    let tobeadded = [];\n\n    for (let x of contents) {\n        if (whitelist.includes(x.name)) {\n            tobeadded.push(x.data)\n        }\n    }\n    tobeadded.sort(function(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        }\n        if (a.name > b.name) {\n            return 1;\n        }\n        return 0;\n    })\n    await actor.createEmbeddedDocuments('Item', tobeadded)\n}","folder":null,"sort":0,"permission":{"default":0,"o86R8RtURj8zbgWh":3},"flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.r5f258B470lG9zTU"}},"_id":"o5tRBBKNkcgNGhGA"}
{"name":"Basic Actions (incl. exploration & downtime)","type":"script","author":"o86R8RtURj8zbgWh","img":"systems/pf2e/icons/actions/OneAction.webp","scope":"global","command":"if (actor) {\n    const whitelist = ['Administer First Aid', 'Aid', 'Avert Gaze', 'Balance', 'Burrow', 'Climb', 'Command an Animal', 'Conceal an Object', 'Crawl', 'Create a Diversion', 'Decipher Writing', 'Delay', 'Demoralize', 'Dismiss', 'Drop Prone', 'Escape', 'Force Open', 'Grab an Edge', 'Grapple', 'Hide', 'High Jump', 'Interact', 'Leap', 'Lie', 'Long Jump', 'Mount', 'Palm an Object', 'Perform', 'Point Out', 'Raise a Shield', 'Ready', 'Recall Knowledge (Arcana)', 'Recall Knowledge (Crafting)', 'Recall Knowledge (Lore)', 'Recall Knowledge (Medicine)', 'Recall Knowledge (Nature)', 'Recall Knowledge (Occultism)', 'Recall Knowledge (Religion)', 'Recall Knowledge (Society)', 'Release', 'Request', 'Seek', 'Sense Motive', 'Shove', 'Sneak', 'Stand', 'Steal', 'Step', 'Stride', 'Strike', 'Sustain an Activation', 'Swim', 'Take Cover', 'Trip', 'Tumble Through', 'Affix a Talisman', 'Avoid Notice', 'Coerce', 'Defend', 'Follow the Expert', 'Gather Information', 'Hustle', 'Identify Magic', 'Impersonate', 'Investigate', 'Make an Impression', 'Refocus', 'Repair', 'Scout', 'Earn Income', 'Long Term Rest', 'Retraining', 'Subsist', 'Search', ];\n\n    const contents = await game.packs.filter(p => p.metadata.entity === 'Item' && p.metadata.name === \"actionspf2e\")[0].getDocuments();\n\n    let tobeadded = [];\n\n    for (let x of contents) {\n        if (whitelist.includes(x.name)) {\n            tobeadded.push(x.data)\n        }\n    }\n    tobeadded.sort(function(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        }\n        if (a.name > b.name) {\n            return 1;\n        }\n        return 0;\n    })\n    await actor.createEmbeddedDocuments('Item', tobeadded)\n}","folder":null,"sort":0,"permission":{"default":0,"o86R8RtURj8zbgWh":3},"flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.M9Z1Ma4PJYb4E15h"}},"_id":"o6CM3n3wpgzQhvw8"}
{"name":"Arcana Actions","type":"script","author":"o86R8RtURj8zbgWh","img":"systems/pf2e/icons/features/classes/archwizards-spellcraft.webp","scope":"global","command":"if (actor) {\n  const whitelist = ['Borrow an Arcane Spell', 'Identify Magic',];\n  \n    const contents = await game.packs.filter(p => p.metadata.entity === 'Item' && p.metadata.name === \"actionspf2e\")[0].getDocuments();\n\n    let tobeadded = [];\n\n    for (let x of contents) {\n        if (whitelist.includes(x.name)) {\n            tobeadded.push(x.data)\n        }\n    }\n    tobeadded.sort(function(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        }\n        if (a.name > b.name) {\n            return 1;\n        }\n        return 0;\n    })\n    await actor.createEmbeddedDocuments('Item', tobeadded)\n}","folder":null,"sort":0,"permission":{"default":0,"o86R8RtURj8zbgWh":3},"flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.QqlpTZGHoYKKrwFI"}},"_id":"svKjmu4Exwfr2FOa"}
{"name":"Thievery Actions","type":"script","author":"o86R8RtURj8zbgWh","img":"icons/skills/social/theft-pickpocket-bribery-brown.webp","scope":"global","command":"if (actor) {\n  const whitelist = ['Disable Device', 'Pick a Lock',];\n\n    const contents = await game.packs.filter(p => p.metadata.entity === 'Item' && p.metadata.name === \"actionspf2e\")[0].getDocuments();\n\n    let tobeadded = [];\n\n    for (let x of contents) {\n        if (whitelist.includes(x.name)) {\n            tobeadded.push(x.data)\n        }\n    }\n    tobeadded.sort(function(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        }\n        if (a.name > b.name) {\n            return 1;\n        }\n        return 0;\n    })\n    await actor.createEmbeddedDocuments('Item', tobeadded)\n}","folder":null,"sort":0,"permission":{"default":0,"o86R8RtURj8zbgWh":3},"flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.c7UvmHpXVtOSFsXf"}},"_id":"tIyyQWDjKn8PnS4r"}
{"name":"Survival Actions","type":"script","author":"o86R8RtURj8zbgWh","img":"icons/tools/navigation/compass-brass-blue-red.webp","scope":"global","command":"if (actor) {\n  const whitelist = ['Cover Tracks', 'Track',];\n\n    const contents = await game.packs.filter(p => p.metadata.entity === 'Item' && p.metadata.name === \"actionspf2e\")[0].getDocuments();\n\n    let tobeadded = [];\n\n    for (let x of contents) {\n        if (whitelist.includes(x.name)) {\n            tobeadded.push(x.data)\n        }\n    }\n    tobeadded.sort(function(a, b) {\n        if (a.name < b.name) {\n            return -1;\n        }\n        if (a.name > b.name) {\n            return 1;\n        }\n        return 0;\n    })\n    await actor.createEmbeddedDocuments('Item', tobeadded)\n}","folder":null,"sort":0,"permission":{"default":0,"o86R8RtURj8zbgWh":3},"flags":{"furnace":{"runAsGM":true},"core":{"sourceId":"Macro.Tg7RN0FISyigxaMi"}},"_id":"uZtb7RMutdL4d7B9"}
